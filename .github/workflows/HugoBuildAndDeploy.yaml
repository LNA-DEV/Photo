name: HugoBuildAndDeploy

on:
  workflow_dispatch:

  push:
    branches: [main]

env:
  NAME: ./
  CONTAINER-NAME: lna_photo

jobs:
  ReleaseVersion:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - uses: actions/checkout@v3

      # Install Hugo
      - name: Hugo setup
        uses: peaceiris/actions-hugo@v2.5.0
        with:
          extended: true

      - run: npm install
        working-directory: ./${{ env.NAME }}/

      - run: |
          sudo apt install exiftool
          exiftool -overwrite_original -IPTC:CopyrightNotice="Lukas Nagel" -IPTC:By-line="Lukas Nagel" -IPTC:Credit="Lukas Nagel" -XMP-xmpRights:WebStatement="https://creativecommons.org/licenses/by-sa/4.0/" -r .
        working-directory: ./${{ env.NAME }}/content

      # Build the hugo repository
      - run: hugo
        working-directory: ./${{ env.NAME }}/

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: lnadev
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build the Docker image
        run: docker build . --file ./${{ env.NAME }}/Dockerfile --tag lnadev/${{ env.CONTAINER-NAME }}:${{ github.run_number }}

      - name: Push the image to dockerhub
        run: docker push lnadev/${{ env.CONTAINER-NAME }}:${{ github.run_number }}

  ReleaseLatest:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - uses: actions/checkout@v3

      # Install Hugo
      - name: Hugo setup
        uses: peaceiris/actions-hugo@v2.5.0
        with:
          extended: true

      - run: npm install
        working-directory: ./${{ env.NAME }}/

      # Build the hugo repository
      - run: hugo
        working-directory: ./${{ env.NAME }}/

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: lnadev
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build the Docker image
        run: docker build . --file ./${{ env.NAME }}/Dockerfile --tag lnadev/${{ env.CONTAINER-NAME }}:latest

      - name: Push the image to dockerhub
        run: docker push lnadev/${{ env.CONTAINER-NAME }}:latest

  DeployContainer:
    needs: ReleaseVersion
    runs-on: ubuntu-latest

    steps:
      # Download Secure-File
      - name: base64-to-file
        id: write_file
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: "custom-config"
          encodedString: ${{ secrets.KUBECTL_CONFIG }}

      # Setup kubeconfig
      - name: base64-to-file
        id: write_file
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: "custom-config"
          encodedString: ${{ secrets.KUBECTL_CONFIG }}

      # Install chart
      - name: Install Helm chart
        run: |
          helm pull oci://registry-1.docker.io/lnadev/charts.personal
          helm upgrade --install charts.personal oci://registry-1.docker.io/lnadev/charts.personal --namespace personal --kubeconfig ${{ steps.write_file.outputs.filePath }} --set photo.version=${{ github.run_number }}
